class Vector3{
  constructor(x,y,z)
  {
    this.x=x;
    this.y=y;
    this.z=z;
  }
  add(v)
  {
    this.x+=v.x;
    this.y+=v.y;
    this.z+=v.z;
  }
  sub(v)
  {
    
    this.x-=v.x;
    this.y-=v.y;
    this.z-=v.z;
  }
  scale(n)
  {
    this.x *=n;
    this.y *=n;
    this.z *=n;
  }
  mag()
  {
    return Math.sqrt(this.x*this.x+this.y*this.y+this.z*this.z);
  }
  normalize()
  {
    let length = this.mag();
    this.x /=length;
    this.y /=length;
   this.z/=length; 
  }
  dot(v)
  {
    return (this.x*v.x + this.y*v.y + this.z+v.z);
  }
  static cross(a,b)
  {
    let result = new Vector3(0,0,0);
    result.x =a.y*b.z-a.z-b.y;
    result.y=a.z*b.x - a.x*b.z
    result.z=a.x*b.y-a.y*b.x;
    return result;
    
  }
  static add(a,b)
  {
    let result = new Vector3(0,0,0);
    result.x=a.x+b.x;
    result.y=a.y+b.y;
    result.z=a.z+b.z;
    return result;
  }
  static sub(a,b)
  {
    
    let result = new Vector3(0,0,0);
    result.x=a.x-b.x;
    result.y=a.y-b.y;
    result.z=a.z-b.z;
    return result;
  }
  draw(color)
  {
    fill(color);
    sphere(this.x, this.y, this.z, 5);
  }
}

class Vector2
  {
    constructor(x,y)
    {this.x = x;
    this.y=y;
    }
    add(v)
    {
      this.x+=v.x;
      this.y+=v.y;
    }
    
    sub(v)
    {
      this.x-=v.x;
      this.y-=v.y;
    }
    dot(v){
      return (this.x*v.x+this.y*v.y);
    }
    scale(n)
    {
      this.x *=n;
      this.y *=n;
    }
    mag()
    {
      return Math.sqrt(this.x*this.x+this.y*this.y);
      
    }
    perpendicular()
    {
      let result = new Vector2(this.x,this.y);
      result = this.y, -this.x;
      return result;
    }
    
    
    static add(a,b)
    {
      let result = new Vector2(0,0);
      result.x = a.x+b.x;
      result.y = a.y+b.y;
    }
    
  normalize()
  {
    let length = this.mag();
    this.x /=length;
    this.y /=length;
    
  }
    
    static sub(v)
    {
      this.x-=v.x;
      this.y-=v.x;
    }
  }

function setup() {
  createCanvas(400, 400);
}

function draw() {
  background(220);
}